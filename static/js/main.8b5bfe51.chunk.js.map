{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","setTitle","selectedUser","setSelectedUser","titleError","setTitleError","userError","setUserError","maxId","Math","max","handleChange","event","target","value","Number","action","method","onSubmit","preventDefault","newTodo","htmlFor","type","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b5bfe51.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const maxId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>,\n  ) => {\n    switch (event.target.id) {\n      case 'titleInput':\n        setTitleError(false);\n        setTitle(event.target.value);\n        break;\n\n      case 'userSelect':\n        setUserError(false);\n        setSelectedUser(getUser(Number(event.target.value)));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setUserError(true);\n    }\n\n    if (!title || !selectedUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: maxId,\n      title,\n      userId: selectedUser ? selectedUser.id : -1,\n      completed: false,\n      user: selectedUser,\n    };\n\n    setVisibleTodos([...visibleTodos, newTodo]);\n    setTitle('');\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            data-cy=\"titleInput\"\n            onChange={handleChange}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            placeholder=\"Choose a user\"\n            data-cy=\"userSelect\"\n            value={selectedUser ? selectedUser.id : 0}\n            onChange={handleChange}\n          >\n            <option value=\"\">Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}